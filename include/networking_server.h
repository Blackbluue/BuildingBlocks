#ifndef NETWORKING_SERVER_H
#define NETWORKING_SERVER_H

#include "networking_utils.h"

/* DATA */

enum err_type {
    SYS,    // system error
    GAI,    // getaddrinfo error
    SOCK,   // socket error
    BIND,   // bind error
    LISTEN, // listen error
};

typedef struct server server_t;

/**
 * @brief Create an Inet server socket.
 *
 * Creates an Inet server with the given attributes. The socket will be bound to
 * all interfaces. If the socket type is SOCK_STREAM or SOCK_SEQPACKET, the
 * socket will be set to listen for incoming connections.
 *
 * Possible errors:
 * - SOCK: socket error
 *      EACCES: Permission to create a socket of the specified type and/or
                protocol is denied.
 *      EMFILE: The per-process limit on the number of open file descriptors has
                been reached.
 *      ENFILE: The system-wide limit on the total number of open files has been
                reached.
 *      ENOBUFS: or ENOMEM:
 *              Insufficient memory is available.  The socket cannot be created
                until sufficient resources are freed.
 *      Other errors may be generated by the underlying protocol modules.
 * - GAI: getaddrinfo error
 *      EAI_MEMORY: Out of memory.
 *      EAI_NONAME: The service is not known
 *      EAI_SERVICE: The requested service is not available for the requested
 *              socket type.
 *      EAI_SOCKTYPE: The requested socket type is not supported.
 *      EAI_SYSTEM: Other system error, check errno for details.
 * - SYS: system error
 *      ENOMEM: Insufficient memory is available.
 * - BIND: bind error
 *      EACCES: The address is protected, and the user is not the superuser.
 *      EADDRINUSE: The given address is already in use.
 *      EADDRINUSE: (Internet  domain sockets) The port number was specified as
 *                  zero in the socket address structure, but, upon attempting
 *                  to bind to an ephemeral port, it was determined that all
 *                  port numbers in the ephemeral port range are currently in
 *                  use.  See the discussion of
 *                  /proc/sys/net/ipv4/ip_local_port_range ip(7).
 * - LISTEN: listen error
 *      EADDRINUSE: Another socket is already listening on the same port.
 *
 * @param attr - the attributes for the server
 * @param port - the port number
 * @return server_t* - the server on success, NULL on failure
 */
server_t *create_inet_server(const char *port, const networking_attr_t *attr,
                             int *err, int *err_type);

#endif /* NETWORKING_SERVER_H */
